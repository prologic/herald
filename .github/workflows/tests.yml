name: tests

on:
  pull_request:
    branches: [main, dev, minion]
  push:
    branches: [main, dev, minion]
jobs:
  test:
    name: test
    env:
      GOFLAGS: ""
      GOPROXY: ""
    strategy:
      matrix:
        goversion: [1.16.x]
        platform: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.goversion }}

      - name: Install protoc
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
                curl -LO https://github.com/protocolbuffers/protobuf/releases/download/v3.15.5/protoc-3.15.5-linux-x86_64.zip
                unzip protoc-3.15.5-linux-x86_64.zip -d $HOME/.local
          elif [ "$RUNNER_OS" == "macOS" ]; then
                curl -LO https://github.com/protocolbuffers/protobuf/releases/download/v3.15.5/protoc-3.15.5-osx-x86_64.zip
                unzip protoc-3.15.5-osx-x86_64.zip -d $HOME/.local
          else
                echo "$RUNNER_OS not supported"
                exit 1
          fi
          $HOME/.local/bin/protoc --version
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Generate
        run: |
          go get -u github.com/golang/protobuf/{proto,protoc-gen-go}
          go get -u google.golang.org/grpc
          make generate

      - name: Format
        run: make fmt

      - name: Lint
        run: |
          go get -u golang.org/x/lint/golint
          make lint

      - name: Vet
        run: make vet

      - name: Test
        run: |
          make test

      - name: Build
        run: make build
