syntax = "proto3";
package services;

import "google/protobuf/timestamp.proto";

option go_package = ".;services";

/*
    Comments are used to record a message history
*/
message Comment {
    google.protobuf.Timestamp timestamp = 1;
    string text = 2;
}

/*
    Status is used to determine if runs/samples have tagged processes, or if they have been announced via the message server
*/
enum Status {
    UN_INITIALIZED = 0;
    untagged = 1;
    tagged = 2;
    announced = 3;
}

/*
    User is used to identify the owner of HeraldData and is required for announcements
*/
message User {
    google.protobuf.Timestamp created = 1;
    string name = 2;
    string email = 3;
}

/*
    Config is used to describe a Herald instance
*/
message Config {
    google.protobuf.Timestamp created = 1;
    string filepath = 2;                        // filepath to config
    string fileformat = 3;                      // the fileformat of the config on disk
    string version = 4;                         // version of Herald used   
    User user = 5;                              // user details
}

/*
    HeraldData is the base type, used by both Run and Sample
*/
message HeraldData {
    google.protobuf.Timestamp created = 1;
    string label = 3;                            // the run or sample name
    repeated Comment history = 4;                // describes the history of the run
    Status status = 5;                           // describes if untagged/tagged/announced
    map<string, bool> tags = 6;                  // tagged services and their complete status (true=complete, false=incomplete)
    repeated string requestOrder = 7;            // the order to send requests to the tagged services
}

/*
    Run is used to describe a Nanopore sequencing run
*/
message Run {
    HeraldData metadata = 1;                    // the base info
    string outputDirectory = 2;                 // where the run is stored
    string fast5OutputDirectory = 3;            // where the run fast5 data is stored
    string fastqOutputDirectory = 4;            // where the run fastq data is stored

}

/*
    Sample is used to describe a biological sample which is being sequenced as part of a Run
*/
message Sample {
    HeraldData metadata = 1;                   // the base info
    string parentRun = 2;
    int32 barcode = 3;
}
