syntax = "proto3";
package data;

import "google/protobuf/timestamp.proto";

/*
    Comments are used to record a message history
*/
message Comment {
    google.protobuf.Timestamp timestamp = 1;
    string text = 2;
}

/*
    Status is used to determine if experiments/samples have tagged processes, or if they have been announced via the message server
*/
enum Status {
    UN_INITIALIZED = 0;
    untagged = 1;
    tagged = 2;
    announced = 3;
}

/*
    Process describes what to do to an experiment or sample
*/
message Process {
    bool complete = 1;                          // set true if the process endpoint reached
    string name = 2;                            // the name of the process
    repeated Process dependsOn = 3;             // the processes that this process depends on (i.e. must already be marked complete)
    repeated Comment history = 4;               // describes the history of the process
    string endpoint = 5;                        // the filepath to check as an endpoint for this process // TODO: this is just a test solution for now
}

/*
    HeraldData is the base type, used by both Experiment and Sample
*/
message HeraldData {
    google.protobuf.Timestamp created = 1;
    string label = 2;                            // the experiment or sample name
    repeated Comment history = 3;                // describes the history of the experiment
    Status status = 4;                           // describes if untagged/tagged/announced
    repeated Process tags = 5;                   // tagged processes for this experiment
}

/*
    Experiment is used to describe a Nanopore sequencing run
*/
message Experiment {
    HeraldData metadata = 1;                    // the base info
    string output_directory = 2;                // where the experiment is stored
    string fast5_output_directory = 3;          // where the experiment fast5 data is stored
    string fastq_output_directory = 4;          // where the experiment fastq data is stored

}

/*
    Sample is used to describe a biological sample which is being sequenced as part of an Experiment
*/
message Sample {
    HeraldData metadata = 1;                   // the base info
    string parentExperiment = 2;
    int32 barcode = 3;
}
